version: "3.9"

services:
  db:
    image: postgres
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=todo
      - POSTGRES_USER=todoUser
      - POSTGRES_PASSWORD=todo123
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U todoUser" ]
      interval: 5s
      timeout: 5s
      retries: 5
  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile.prod
    command: gunicorn backend.wsgi:application -c gunicorn.config.py --bind 0.0.0.0:8000
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      migration:
        condition: service_started
  migration:
    build:
      context: ./backend
      dockerfile: ./Dockerfile.prod
    command: python manage.py migrate --noinput && python manage.py collectstatic --noinput
    depends_on:
      db:
        condition: service_healthy
  frontend:
    build:
      context: ./frontend
      dockerfile: ./Dockerfile.prod
    ports:
      - '1337:80'
    depends_on:
      - backend